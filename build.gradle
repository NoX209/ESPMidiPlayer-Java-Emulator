
apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
	mavenCentral()

	maven {
		url "https://jitpack.io"
        url "https://repo.eclipse.org/content/repositories/paho-snapshots/"
	}
}

dependencies {
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.1'
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
	implementation 'com.fifesoft:rsyntaxtextarea:3.1.3'
	implementation 'com.formdev:flatlaf:1.3'
	implementation 'com.formdev:flatlaf-intellij-themes:1.3'
}

sourceSets {
	main.java.srcDir "src/main/java"
	main.resources.srcDir "src/main/resources"
}

jar {
	manifest {
		attributes (
			'Class-Path' : configurations.runtimeClasspath.collect{ it.getName() }.join(' '),
			'Main-Class' : 'javaMidi.JavaMain')
	} from configurations.compile into ''
}

task construct(){
	dependsOn 'uberJar'
	finalizedBy 'cleanUpConstruct'
}

task uberJar(type : Zip) {
	dependsOn 'build'
	archiveFileName = "javaMidiBuild.jar"
	destinationDirectory = file("build/libs")

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from (configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }){
		include "**/*.class"
		include "**/*.properties"
		include "**/*.png"
		include "**/*.xml"
		include "**/*.dtd"
		include "**/*.json"
		include "**/*.dll"
		include "META-INF/maven/**"
		include "META-INF/services/**"
		exclude "javaMidi/**"
    }
	from zipTree("build/libs/javaMidi.jar")
}

task cleanUpConstruct(type : Delete){
	delete "build/libs/javaMidi.jar"
}